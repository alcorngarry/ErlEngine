<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui.cpp</FILENAME>
      <LINE>8492</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>33011</DEFECTCODE>
    <DESCRIPTION>Unchecked upper bound for enum key used as index..</DESCRIPTION>
    <FUNCTION>ImGui::GetKeyData</FUNCTION>
    <DECORATED>?GetKeyData@ImGui@@YAPEAUImGuiKeyData@@PEAUImGuiContext@@W4ImGuiKey@@@Z</DECORATED>
    <FUNCLINE>8482</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui.cpp</FILENAME>
      <LINE>9557</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>33010</DEFECTCODE>
    <DESCRIPTION>Unchecked lower bound for enum source used as index..</DESCRIPTION>
    <FUNCTION>GetInputSourceName</FUNCTION>
    <DECORATED>?GetInputSourceName@@YAPEBDW4ImGuiInputSource@@@Z</DECORATED>
    <FUNCLINE>9553</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui.cpp</FILENAME>
      <LINE>9563</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>33010</DEFECTCODE>
    <DESCRIPTION>Unchecked lower bound for enum source used as index..</DESCRIPTION>
    <FUNCTION>GetMouseSourceName</FUNCTION>
    <DECORATED>?GetMouseSourceName@@YAPEBDW4ImGuiMouseSource@@@Z</DECORATED>
    <FUNCLINE>9559</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui.cpp</FILENAME>
      <LINE>12227</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'window'. </DESCRIPTION>
    <FUNCTION>ImGui::NavCalcPreferredRefPos</FUNCTION>
    <DECORATED>?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ</DECORATED>
    <FUNCLINE>12202</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12204</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12205</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12206</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12209</LINE>
        <COLUMN>70</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'window' may be NULL (Skip this branch)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12220</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12221</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'activated_shortcut')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12222</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12227</LINE>
        <COLUMN>52</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
        <FILENAME>imgui.cpp</FILENAME>
        <LINE>12227</LINE>
        <COLUMN>52</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'window' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_demo.cpp</FILENAME>
      <LINE>1686</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ImGuiKey' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ShowDemoWindowWidgets::Funcs::MyCallback</FUNCTION>
    <DECORATED>?MyCallback@Funcs@?BMO@??ShowDemoWindowWidgets@@YAXPEAUImGuiDemoWindowData@@@Z@SAHPEAUImGuiInputTextCallbackData@@@Z</DECORATED>
    <FUNCLINE>1678</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_demo.cpp</FILENAME>
      <LINE>3626</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ShowDemoWindowMultiSelect::__l169::WidgetType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ShowDemoWindowMultiSelect</FUNCTION>
    <DECORATED>?ShowDemoWindowMultiSelect@@YAXPEAUImGuiDemoWindowData@@@Z</DECORATED>
    <FUNCLINE>3106</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_demo.cpp</FILENAME>
      <LINE>5066</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ImGuiSortDirection' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>`anonymous-namespace'::MyItem::CompareWithSortSpecs</FUNCTION>
    <DECORATED>?CompareWithSortSpecs@MyItem@?A0x630221df@@SAHPEBX0@Z</DECORATED>
    <FUNCLINE>5047</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_demo.cpp</FILENAME>
      <LINE>10232</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ImGuiCol_' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ExampleAssetsBrowser::Draw</FUNCTION>
    <DECORATED>?Draw@ExampleAssetsBrowser@@QEAAXPEBDPEA_N@Z</DECORATED>
    <FUNCLINE>10026</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_glfw.cpp</FILENAME>
      <LINE>305</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ImGuiKey' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ImGui_ImplGlfw_KeyToImGuiKey</FUNCTION>
    <DECORATED>?ImGui_ImplGlfw_KeyToImGuiKey@@YA?AW4ImGuiKey@@H@Z</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_glfw.cpp</FILENAME>
      <LINE>490</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'ImGuiMouseSource' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>GetMouseSourceFromMessageExtraInfo</FUNCTION>
    <DECORATED>?GetMouseSourceFromMessageExtraInfo@@YA?AW4ImGuiMouseSource@@XZ</DECORATED>
    <FUNCLINE>486</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_glfw.cpp</FILENAME>
      <LINE>568</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'GlfwClientApi' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ImGui_ImplGlfw_Init</FUNCTION>
    <DECORATED>?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z</DECORATED>
    <FUNCLINE>568</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_opengl3_loader.h</FILENAME>
      <LINE>801</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>parse_version</FUNCTION>
    <DECORATED>parse_version</DECORATED>
    <FUNCLINE>791</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_opengl3.cpp</FILENAME>
      <LINE>310</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>ImGui_ImplOpenGL3_Init</FUNCTION>
    <DECORATED>?ImGui_ImplOpenGL3_Init@@YA_NPEBD@Z</DECORATED>
    <FUNCLINE>277</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\imgui\</FILEPATH>
      <FILENAME>imgui_impl_opengl3.cpp</FILENAME>
      <LINE>767</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>ImGui_ImplOpenGL3_CreateDeviceObjects</FUNCTION>
    <DECORATED>?ImGui_ImplOpenGL3_CreateDeviceObjects@@YA_NXZ</DECORATED>
    <FUNCLINE>748</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>types.h</FILENAME>
      <LINE>361</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>aiString::Append</FUNCTION>
    <DECORATED>?Append@aiString@@QEAAXPEBD@Z</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>types.h</FILENAME>
      <LINE>365</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>aiString::Append</FUNCTION>
    <DECORATED>?Append@aiString@@QEAAXPEBD@Z</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>mesh.h</FILENAME>
      <LINE>848</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiMorphingMethod' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiMesh::{ctor}</FUNCTION>
    <DECORATED>??0aiMesh@@QEAA@XZ</DECORATED>
    <FUNCLINE>831</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>light.h</FILENAME>
      <LINE>241</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiLightSourceType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiLight::{ctor}</FUNCTION>
    <DECORATED>??0aiLight@@QEAA@XZ</DECORATED>
    <FUNCLINE>240</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>material.h</FILENAME>
      <LINE>664</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiPropertyTypeInfo' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiMaterialProperty::{ctor}</FUNCTION>
    <DECORATED>??0aiMaterialProperty@@QEAA@XZ</DECORATED>
    <FUNCLINE>660</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>material.h</FILENAME>
      <LINE>1542</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiReturn' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiGetMaterialFloat</FUNCTION>
    <DECORATED>aiGetMaterialFloat</DECORATED>
    <FUNCLINE>1537</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>material.inl</FILENAME>
      <LINE>65</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiTextureType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiMaterial::GetTexture</FUNCTION>
    <DECORATED>?GetTexture@aiMaterial@@QEBA?AW4aiReturn@@W4aiTextureType@@IPEAUaiString@@PEAW4aiTextureMapping@@PEAIPEAMPEAW4aiTextureOp@@PEAW4aiTextureMapMode@@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>anim.h</FILENAME>
      <LINE>329</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiAnimBehaviour' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiNodeAnim::{ctor}</FUNCTION>
    <DECORATED>??0aiNodeAnim@@QEAA@XZ</DECORATED>
    <FUNCLINE>322</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\third-party-dependencies\include\assimp\</FILEPATH>
      <FILENAME>metadata.h</FILENAME>
      <LINE>97</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'aiMetadataType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>aiMetadataEntry::{ctor}</FUNCTION>
    <DECORATED>??0aiMetadataEntry@@QEAA@XZ</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>DebugMenu.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'DebugMenu::pickingRenderer' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>DebugMenu::{ctor}</FUNCTION>
    <DECORATED>??0DebugMenu@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>DebugMenu::pickingRenderer</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>Game.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Game::level' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Game::{ctor}</FUNCTION>
    <DECORATED>??0Game@@QEAA@PEAUGLFWwindow@@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Game::level</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>Game.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'GameState' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Game::{ctor}</FUNCTION>
    <DECORATED>??0Game@@QEAA@PEAUGLFWwindow@@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>GameObject.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'GameObject::Position' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>GameObject::{ctor}</FUNCTION>
    <DECORATED>??0GameObject@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>GameObject::Position</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>Model.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Model::gammaCorrection' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Model::{ctor}</FUNCTION>
    <DECORATED>??0Model@@QEAA@XZ</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Model::gammaCorrection</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>InputManager.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'InputManager::ypos' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>InputManager::{ctor}</FUNCTION>
    <DECORATED>??0InputManager@@QEAA@PEAUGLFWwindow@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>InputManager::ypos</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>Mesh.h</FILENAME>
      <LINE>29</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Texture::id' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Texture::{ctor}</FUNCTION>
    <DECORATED>??0Texture@@QEAA@XZ</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Texture::id</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>Player.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Player::startTime' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Player::{ctor}</FUNCTION>
    <DECORATED>??0Player@@QEAA@VModel@@U?$vec@$02M$0A@@glm@@1@Z</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Player::startTime</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1051</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1048</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1051</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1048</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1058</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1055</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1058</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1055</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1058</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1055</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1065</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1062</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1065</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1062</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1065</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1062</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1065</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1062</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1212</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_8_to_16</FUNCTION>
    <DECORATED>?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z</DECORATED>
    <FUNCLINE>1206</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1231</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1222</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1231</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1222</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1772</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1757</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1772</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1757</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1773</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1757</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1773</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1757</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1822</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1822</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1822</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1829</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1829</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1830</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1830</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1814</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1897</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_to_ldr</FUNCTION>
    <DECORATED>?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z</DECORATED>
    <FUNCLINE>1886</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3037</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3070</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2980</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2980</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2980</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3009</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2962</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3107</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3097</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3097</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3097</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3109</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3097</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3609</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__resample_row_hv_2_simd</FUNCTION>
    <DECORATED>?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z</DECORATED>
    <FUNCLINE>3552</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3926</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3887</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3949</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3887</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3949</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3887</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4784</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4741</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4785</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4741</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4786</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4741</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4872</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4741</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4943</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4943</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4943</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4944</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4944</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4944</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5789</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5599</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5789</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5599</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5790</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5599</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5790</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5599</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5790</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5599</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6013</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5948</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6013</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5948</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6290</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6211</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6290</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6211</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6378</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6211</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6391</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6211</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6516</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load_core</FUNCTION>
    <DECORATED>?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z</DECORATED>
    <FUNCLINE>6483</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6516</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load_core</FUNCTION>
    <DECORATED>?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z</DECORATED>
    <FUNCLINE>6483</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6621</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load</FUNCTION>
    <DECORATED>?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6621</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load</FUNCTION>
    <DECORATED>?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6892</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6893</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6901</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6902</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6938</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6938</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6942</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6877</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7070</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '35036' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7101</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7118</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7129</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7129</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7131</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>7070</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7157</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '34980' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>stbi__gif_load</FUNCTION>
    <DECORATED>?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7334</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7334</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7334</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7393</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7393</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7393</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\opengl_code\test_project\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7393</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7269</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>